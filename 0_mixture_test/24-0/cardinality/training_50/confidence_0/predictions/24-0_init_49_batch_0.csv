iteration,params,plan_id,confidence,plan_content
0,"[""(as Charles Tamburro)', '(as Neil Almebor)', '(as Rika Schwarz)', '(rider)', '(as Jemma)"", '[nl]', 'weekend gross', ""action-hero', 'high-dynamic-range', 'oriental-music', 'food-basket', 'western-norway"", '%O%', '%c%', 'm', '%u%', 'actor', '1990']",170,0.50346,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:% 200%', 'USA:%201%', 'f', '%M%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Kalani Lei)', '(Security)', '(as Yael Tzalka)', '(as Dr. Vera Rubin)"", '[se]', 'tech info', ""battle', 'atomic-weed', 'mass-spectrometer', 'licking-a-wall', 'armenian-terrorism"", '%A%', '%l%', 'm', '%,%', 'actor', '1990']",170,0.50169265,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'Japan:%201%', 'USA:%200%', 'm', '%Q%', 'actor', '2010']",163,0.49945903,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(supervising producer)', '(creator)', '(uncredited)', '(co-executive producer)', '(uncredited)"", '[de]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%S%', '%o%', 'm', '%Nunn%', 'actor', '2006']",170,0.50170237,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(voice)', '(voice)"", '[ee]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%r%', '%o%', 'm', '%William%', 'actor', '1960']",170,0.5074574,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as ClÃ¡udia Leite)', '(as T. Rossi)', '(as Nick Dawnay)', '(as Andre Charise)"", '[gb]', 'book', ""action-hero', 'flaming-lips', 'money-in-mail', 'cartoon-cheetah', 'based-on-journal"", '%a%', '%u%', 'm', '%a%', 'actor', '1990']",170,0.5160588,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(voice)"", '[fr]', 'release dates', ""murder', 'female-nudity', 'female-nudity', 'murder', 'murder"", '%A%', '%r%', 'm', '%Roger%', 'actor', '2011']",170,0.5063005,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'countries', ""female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity"", '%h%', '%C%', 'm', '%Joey%', 'actor', '1974']",170,0.5074875,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(producer)', '(production assistant)', '(producer)', '(producer)"", '[de]', 'countries', ""independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel"", '%USA%', '%A%', 'm', '%Bo%', 'actor', '2001']",170,0.50719476,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(producer)', '(voice)', '(executive producer)', '(supervising producer)', '(script supervisor)"", '[us]', 'countries', ""murder', 'murder', 'murder', 'murder', 'female-nudity"", '%E%', '%and%', 'm', '%Franco%', 'actor', '1988']",170,0.5084325,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Shadia Amen)', '(as Julia Schuler)', '(Gandhi''s P.A.)', '(during Boer War)"", '[nl]', 'weekend gross', ""battle', 'recklessness', 'oasis', 'making-of', 'woodcut"", '%l%', '%A%', 'm', '%h%', 'actor', '1990']",170,0.5051464,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(writer)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""oral-sex', 'friendship', 'death', 'love', 'violence"", '%C%', '%o%', 'm', '%Adam%', 'actor', '2004']",163,0.50693506,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%200%', 'USA:% 199%', 'f', 'K%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[fr]', 'genres', ""independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel"", '%n%', '%1%', 'm', '%SÃ¡%', 'actor', '1987']",163,0.49160478,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Gilbert Ferro)', '(as L. Garnitsa)', '(as Gani Nofiu)', '(as Rhet Romero)"", '[se]', 'weekend gross', ""weapons-research', 'traffic-warden', 'working-wife', 'rolling-stones', 'fake-penis"", '%U%', '%(%', 'm', '%r%', 'actor', '1990']",170,0.5107115,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:%201%', 'Japan:%201%', 'f', 'W%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)"", '[fr]', 'release dates', ""independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel"", '%o%', '%l%', 'm', '%Eva%', 'actor', '1960']",163,0.5005173,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(production assistant)', '(written by)', '(associate producer)', '(voice)', '(associate producer)"", '[fr]', 'countries', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%l%', '%r%', 'm', '%C%', 'actor', '2007']",170,0.5045231,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%A%', '%must%', 'm', '%Dan%', 'actor', '1983']",163,0.5052217,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Art Stewart)', '(as Soluna)', '(as Maggie Li)', '(as Luanne Ponce)"", '[se]', 'novel', ""android', 'raising-money', 'british-colonial', 'trust-company', 'killed-with-a-bomb"", '%9%', '%r%', 'm', '%a%', 'actor', '1990']",170,0.51626825,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)"", '[fr]', 'release dates', ""murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder"", '%Spherical%', '%l%', 'm', '%Francisco%', 'actor', '1993']",170,0.4963865,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%200%', 'USA:% 199%', 'f', 'F%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(novel)', '(voice) (as Judy)', '(credit only)', '(archive footage)', '(voice)"", '[us]', 'countries', ""female-nudity', 'female-nudity', 'murder', 'murder', 'murder"", '%35%', '%o%', 'm', '%Alexa%', 'actor', '2003']",163,0.5073124,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[fr]', 'genres', ""number-in-title', 'bare-chested-male', 'based-on-play', 'bare-chested-male', 'father-son-relationship"", '%o%', '%Digital%', 'm', '%Al%', 'actor', '1969']",163,0.49464643,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:% 199%', 'USA:%200%', 'f', '%B%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[jp]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 199%', 'Japan:%201%', 'f', 'V%', 'actress', '2000']",170,0.51649123,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'countries', ""murder', 'murder', 'female-nudity', 'female-nudity', 'female-nudity"", '%U%', '%D%', 'm', '%James%', 'actor', '1938']",170,0.50280243,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(uncredited)', '(voice)', '(production assistant)"", '[gb]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%A%', '%g%', 'm', '%Mark%', 'actor', '2001']",60,0.49537495,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n an) NestLoop(k mk t ci rt n an chn) NestLoop(k mk t ci rt n an chn mi) NestLoop(k mk t ci rt n an chn mi it) NestLoop(k mk t ci rt n an chn mi it mc) NestLoop(k mk t ci rt n an chn mi it mc cn) Leading((((((((((((k mk) t) ci) rt) n) an) chn) mi) it) mc) cn)) */
0,"['(as Charles Tamburro)\', \'(as Henri Thanos)\', \'(play ""Guilty"")\', \'(character: Max)\', \'(Attendant)', '[fr]', 'screenplay-teleplay', ""voice-sampling', 'punched-in-the-back', 'sports-coach', 'murder-for-hire', 'personal-growth"", '%r%', '%f%', 'm', '%u%', 'actor', '1990']",163,0.49149576,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Asiya)', '(as VIA Mirazh)', '(as T.S. Clark)', '(as Jesus GÃ³mez)"", '[br]', 'weekend gross', ""weapons-research', 'reference-to-rastus', 'bubble-bath', 'mash-unit', 'looking-pale"", '%y%', '%5%', 'm', '%u%', 'actor', '1990']",170,0.5065315,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(producer)', '(credit only)', '(producer)', '(written by)"", '[gb]', 'countries', ""father-daughter-relationship', 'nudity', 'oral-sex', 'friendship', 'dog"", '%E%', '%o%', 'm', '%Fred%', 'actor', '1933']",163,0.5053858,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Shi Ma Shan)', '(as Shane Haworth)', '(as Valeria Rosini)', '(as Nancy Nelson)"", '[se]', 'book', ""weapons-research', 'gun-licking', 'babylon', 'two-cylinder-pump', 'trumpet"", '%k%', '%T%', 'm', '%a%', 'actor', '1990']",170,0.50929147,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:% 200%', 'USA:%200%', 'm', '%T%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[nl]', 'release dates', ""murder', 'murder-in-title"", 'USA:% 200%', 'Japan:%2007%', 'f', '%Yo%', 'actress', '2000']",170,0.51649123,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[jp]', 'release dates', ""sequel', 'revenge', 'based-on-novel"", 'Japan:%201%', 'USA:%2008%', 'f', '%G%', 'actress', '1950']",170,0.5110474,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Stan Fraser)', '(as Lisa Hellwig)', '(as Marjut)', '(as Iron Cobra)"", '[br]', 'tech info', ""android', 'buck-rogers', 'tools', 'burning-poem', 'kamalahasan"", '%C%', '%)%', 'm', '%A%', 'actor', '1990']",163,0.50927246,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[fr]', 'budget', ""murder', 'female-nudity', 'murder', 'murder', 'murder"", '%33%', '%r%', 'm', '%D%', 'actor', '2000']",163,0.5069031,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(voice)"", '[fr]', 'release dates', ""hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore"", '%C%', '%o%', 'm', '%n%', 'actor', '1980']",163,0.50049883,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)"", '[us]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%o%', '%Apollo%', 'm', '%Jon%', 'actor', '2004']",163,0.5021412,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(production assistant)', '(producer)', '(uncredited)', '(uncredited)', '(associate producer)"", '[us]', 'countries', ""sex', 'sex', 'sex', 'sex', 'sex"", '%OFM%', '%and%', 'm', '%Ron%', 'actor', '1998']",170,0.49912915,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(as Jim Frawley)', '(as Sandra Grose)', '(1999-2003)', '(as Preston Pratt)"", '[us]', 'certificates', ""gun-shot', 'ironworker', 'mazda', 'playing-with-a-dog', 'stick-figure"", '%r%', '%8%', 'm', '%R%', 'actor', '2009']",163,0.5012443,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(accounting intern)', '(as Sarah Lubell)', '(as Katrena Starr)', '(Yes, Minister)"", '[se]', 'admissions', ""battle', 'multiplicity', 'angry-dog', 'suggesting-suicide', 'worry-wart"", '%8%', '%n%', 'm', '%s%', 'actor', '1990']",170,0.51633275,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 199%', 'Japan:%200%', 'f', 'B%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[fr]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%35%', '%S%', 'm', '%Joey%', 'actor', '1944']",163,0.49546355,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%201%', 'USA:% 200%', 'f', 'B%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%201%', 'Japan:%200%', 'f', 'V%', 'actress', '2010']",170,0.5073973,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%2007%', 'Japan:%200%', 'f', '%V%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 200%', 'USA:%200%', 'f', 'W%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Edmund Ho)', '(as Rebeka Jordan)', '(as Jo Kern)', '(as Ã\x87un LajÃ§i)"", '[nl]', 'production process protocol', ""battle', 'nude-with-glasses', 'hauling-business', 'vaulted-roof', 'stalactites"", '%,%', '%,%', 'm', '%r%', 'actor', '1990']",170,0.5035336,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(writer)', '(producer)', '(uncredited)', '(associate producer)', '(written by)"", '[gb]', 'release dates', ""anal-sex', 'male-nudity', 'death', 'blood', 'oral-sex"", '%s%', '%e%', 'm', '%Weaver%', 'actor', '2003']",163,0.5057276,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%2007%', 'USA:% 199%', 'm', 'D%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity"", '%o%', '%S%', 'm', '%Crawford%', 'actor', '1976']",163,0.49490067,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"['(as Charles Tamburro)\', \'(as Persia)\', \'(as Albert Garrat)\', \'(segment ""Revenge"")\', \'(as Lenka Erdos)', '[fr]', 'other literature', ""2020s', 'turned-into-a-wolf', 'pagan-subtext', 'english-opera', 'power-cosmic"", '%u%', '%c%', 'm', '%r%', 'actor', '1990']",170,0.50522304,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[de]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%200%', 'Japan:%2007%', 'f', '%J%', 'actress', '2000']",170,0.51860553,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(voice)', '(voice)', '(uncredited)"", '[us]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%E%', '%o%', 'm', '%Armand%', 'actor', '1950']",170,0.5002995,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as A. Poddubinsky)', '(as Chris Watts)', '(as Kate McClaine)', '(menu producer)"", '[se]', 'adaption', ""weapons-research', 'saatchi-and-saatchi', 'spiked-hair', 'alma-tunnel', 'undersea-monster"", '%o%', '%,%', 'm', '%h%', 'actor', '1990']",163,0.50069654,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(producer)', '(uncredited)', '(executive producer)', '(script supervisor)', '(production coordinator)"", '[fr]', 'countries', ""female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity"", '%o%', '%r%', 'm', '%JesÃºs%', 'actor', '1904']",170,0.50674546,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[de]', 'genres', ""hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore"", '%s%', '%S%', 'f', '%Maria%', 'actress', '1961']",170,0.5069211,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)"", '[us]', 'release dates', ""based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel"", '%o%', '%r%', 'f', '%Y%', 'actress', '1999']",170,0.5121638,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as R. Gaylor)', '(as David MacMahon)', '(Sakura''s father)', '(as Fred Ongleo)"", '[fr]', 'screenplay-teleplay', ""weapons-research', 'interdisciplinary', 'michoacan', 'no-story', 'bobo-the-elephant"", '%y%', '%y%', 'm', '%a%', 'actor', '1990']",163,0.49149576,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(producer)', '(uncredited)', '(executive producer)', '(producer)', '(co-executive producer)"", '[us]', 'genres', ""male-nudity', 'death', 'father-daughter-relationship', 'surrealism', 'surrealism"", '%U%', '%r%', 'm', '%Joe%', 'actor', '2005']",170,0.51599866,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(animal coordinator)', '(voice)', '(voice)', '(producer)', '(producer)"", '[us]', 'release dates', ""independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel"", '%n%', '%Sweden%', 'm', '%Griffin%', 'actor', '1927']",163,0.5040439,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)"", '[us]', 'genres', ""independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film"", '%Spherical%', '%A%', 'm', '%D%', 'actor', '1997']",170,0.5070923,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(as Kylie Richman)', '(as KeÃ©ry Panni)', '(as L. Obrazumova)', '(Rasta)"", '[us]', 'certificates', ""liar''s-dice', 'plane-construction', 'driving', 'charity-work', 'chuquicamata-chile"", '%K%', '%8%', 'm', '%R%', 'actor', '2009']",163,0.5012443,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Bev Wowchuk)', '(as Julien Hussey)', '(femme)', '(as Reuben Rose)"", '[fr]', 'other literature', ""android', 'icefall', 'sperbowl-xli', 'anaphrodisiac', 'golan-heights"", '%i%', '%i%', 'm', '%C%', 'actor', '1990']",163,0.506294,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title"", 'Japan:%201%', 'USA:% 199%', 'f', '%Y%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[gb]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%o%', '%that%', 'm', '%Griffin%', 'actor', '2004']",163,0.5025546,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'Japan:%2007%', 'USA:%200%', 'f', 'F%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Majken WexÃ¸)', '(as Michael Morse)', '(as Paul Lousteau)', '(as Cindy McKay)"", '[br]', 'weekend gross', ""android', 'rings-swing', 'plethora', 'saddle-shop', 'plastic-roll"", '%5%', '%s%', 'm', '%T%', 'actor', '1990']",170,0.5122032,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)"", '[de]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%A%', '%s%', 'm', '%Kevin%', 'actor', '1984']",170,0.5161865,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 200%', 'Japan:%2007%', 'f', '%L%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[jp]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'Japan:%200%', 'USA:% 199%', 'f', '%Yo%', 'actress', '1950']",170,0.5110474,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[ru]', 'release dates', ""murder', 'blood', 'gore', 'death', 'female-nudity"", 'USA:% 199%', 'USA:%201%', 'f', '%B%', 'actress', '2008']",163,0.50136924,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as S. VrbickÃ¡)', '(as Allan Selwyn)', '(as Mercedes)', '(research staff)"", '[es]', 'printed media reviews', ""voice-sampling', 'costa-del-sol-spain', 'compte', 'methane', 'chanel-no.-5"", '%,%', '%r%', 'm', '%u%', 'actor', '1990']",170,0.5116645,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%201%', 'USA:% 199%', 'f', '%Angel%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%l%', '%r%', 'm', '%Shawn%', 'actor', '1974']",163,0.51035297,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 199%', 'USA:%2008%', 'f', '%Angel%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title"", 'USA:% 200%', 'Japan:%200%', 'f', 'R%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%200%', 'USA:%200%', 'm', '%W%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(as Harry Refn)', '(as Swaroop Dutt)', '(In Audience)', '(as MÃ¼fid Kiper)"", '[us]', 'certificates', ""injury', 'farm-aid-2', 'lamb-skin', 'exercising', 'hajji"", '%1%', '%:%', 'm', '%i%', 'actor', '2009']",163,0.5012443,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(dramatist)', '(technical adviser)', '(guest artiste)', '(as V. Makarov)"", '[nl]', 'printed media reviews', ""battle', 'stearn''s-wharf', 'brazilian', 'rock-palace', 'wire-service"", '%Ã%', '%""%', 'm', '%r%', 'actor', '1990']",170,0.5057902,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Eddie Zamonte)', '(as Sasha Adler)', '(Number One!)', '(as Victor Koppen)"", '[gb]', 'adaption', ""action-hero', 'rainforest', 'goshen-egypt', 'pastry-chef', 'drinking-blood"", '%s%', '%d%', 'm', '%u%', 'actor', '1990']",163,0.50201845,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"['(as Charles Tamburro)\', \'(as Abigail)\', \'(novel ""High Cage"")\', \'(chef) (2002-)\', \'(as Jay Downs)', '[gb]', 'printed media reviews', ""2020s', 'pass', 'ankle-splint', 'mortgage-payment', 'contemporary-music"", '%d%', '%e%', 'm', '%e%', 'actor', '1990']",170,0.5094105,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Anton Herbert)', '(as Zach Ruben)', '(as V. Chiglyaev)', '(as Annie Schon)"", '[fr]', 'weekend gross', ""weapons-research', 'middle-age-couple', '8th-british-army', 'sumgait', 'microfiche"", '%9%', '%J%', 'm', '%s%', 'actor', '1990']",170,0.50087094,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(voice)', '(writer)', '(writer)', '(production assistant)"", '[fr]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%n%', '%l%', 'm', '%Amato%', 'actor', '2003']",163,0.5034414,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Tanya Larivier)', '(as Bob Clampett)', '(as MÃ¢ku NÃ®ruson)', '(certified angel)"", '[br]', 'opening weekend', ""weapons-research', 'emotional-breakdown', 'frog-imitation', 'organism', 'list-making"", '%$%', '%7%', 'm', '%r%', 'actor', '1990']",170,0.5087188,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""nerd', 'loner', 'alienation', 'dignity"", 'USA:%200%', 'Japan:%200%', 'f', '%E%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(executive producer)', '(voice)', '(executive producer)', '(voice)', '(voice)"", '[us]', 'release dates', ""female-nudity', 'murder', 'murder', 'murder', 'female-nudity"", '%mm%', '%A%', 'f', '%D%', 'actress', '2007']",163,0.5022669,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore"", '%o%', '%Approved%', 'f', '%Erica%', 'actress', '1962']",163,0.5037762,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[jp]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:%2008%', 'Japan:%201%', 'f', '%V%', 'actress', '2010']",170,0.5120378,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 200%', 'USA:%2008%', 'f', '%E%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(credit only)', '(as GÃ¼nter Burger)', '(as Wu Dajiang)', '(as Tom Gulliver)', '(as Jade East)"", '[nl]', 'certificates', ""explosion', 'cuban-politics', 'burst-water-pipe', 'common-sense', 'solophobia"", '%1%', '%h%', 'm', '%s%', 'actor', '2009']",163,0.50186855,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'Japan:%200%', 'USA:%200%', 'f', '%Q%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(production assistant)', '(voice)', '(uncredited)', '(uncredited)', '(production assistant)"", '[us]', 'release dates', ""father-daughter-relationship', 'one-word-title', 'police', 'blood', 'death"", '%l%', '%OFM%', 'm', '%Joey%', 'actor', '2005']",170,0.50459063,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%2007%', 'Japan:%200%', 'm', 'M%', 'actor', '2005']",170,0.5045142,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", 'USA:% 200%', 'USA:%200%', 'f', 'Y%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Tony Ling)', '(as Crystal Ashley)', '(as Becky Bowles)', '(as Maja Hendrickx)"", '[nl]', 'printed media reviews', ""weapons-research', 'third-person', 'separated-brothers', 'limb-in-traction', 'temporary-visa"", '%¥%', '%1%', 'm', '%r%', 'actor', '1990']",170,0.5057902,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Vincent Voss)', '(as Bob Saenz)', '(as Oleg Widow)', '(as Rusty Bolin)"", '[es]', 'book', ""2020s', 'debris', 'legal-strategy', 'beslan', 'helix"", '%""%', '%t%', 'm', '%r%', 'actor', '1990']",170,0.5079997,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(1990-2004)', '(as Piti Espanyol)', '(as Thomas Jackson)', '(as Kolya Valeyev)"", '[es]', 'adaption', ""android', 'maupassant', 'chevalin', 'tattoo-artist', 'final-episode"", '%,%', '%r%', 'm', '%m%', 'actor', '1990']",170,0.51307994,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:% 199%', 'Japan:%2007%', 'f', '%R%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(production coordinator)', '(creator)', '(production assistant)', '(co-executive producer)', '(uncredited)"", '[us]', 'release dates', ""murder', 'female-nudity', 'murder', 'female-nudity', 'murder"", '%PFM%', '%Portugal%', 'm', '%Merv%', 'actor', '1941']",163,0.5021299,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(writer)', '(producer)', '(producer)', '(production assistant)', '(uncredited)"", '[de]', 'release dates', ""murder', 'murder', 'murder', 'female-nudity', 'murder"", '%y%', '%u%', 'm', '%Michael%', 'actor', '1981']",170,0.5075735,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:%201%', 'USA:% 200%', 'm', 'G%', 'actor', '2010']",163,0.49945903,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice: Japanese version)', '(voice)', '(producer) (as Fred DeCordova)', '(talent coordinator)', '(executive producer)"", '[us]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%l%', '%with%', 'm', '%Robert%', 'actor', '1990']",163,0.5127055,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as M. Snajdr)', '(as Yanine Bertoli)', '(as Harry LaMont)', '(caterer: Oregon)"", '[gb]', 'weekend gross', ""action-hero', 'gang', 'gay-pornography', 'field-glasses', 'threatening-call"", '%e%', '%7%', 'm', '%T%', 'actor', '1990']",170,0.51105535,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as George Arthur)', '(as San Pestonji)', '(as Koel)', '(as April Chapple)"", '[fr]', 'other literature', ""battle', 'behind-the-line', 'loss-of-reality', 'movie-investor', 'pretend-yarmulke"", '%9%', '%F%', 'm', '%h%', 'actor', '1990']",170,0.50786877,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)"", '[us]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%he%', '%A%', 'm', '%D%', 'actor', '1966']",170,0.5092777,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title"", 'Japan:%201%', 'USA:% 200%', 'm', '%I%', 'actor', '2005']",170,0.5045142,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 200%', 'USA:%201%', 'f', 'B%', 'actress', '2010']",170,0.5073973,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[nl]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:%201%', 'USA:%2008%', 'f', 'J%', 'actress', '2010']",170,0.5120378,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[us]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%E%', '%S%', 'm', '%Jose%', 'actor', '1997']",163,0.5049907,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(Special Features)', '(as Vakila Maan)', '(as Rita Tobin)', '(as Vadim Tsalatti)"", '[se]', 'tech info', ""battle', 'texarkana-arkansas', 'roman-10th-legion', 'plastic-pool', 'bloody-sunday"", '%s%', '%r%', 'm', '%a%', 'actor', '1990']",163,0.504428,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'countries', ""independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film"", '%were%', '%m%', 'm', '%Bob%', 'actor', '1990']",170,0.503127,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(1985 production)', '(as Phill Carey)', '(as Vica Borg)', '(Organ)"", '[us]', 'countries', ""gold-rush', 'ten-cents-a-dance', 'segment-block', 'roman-salute', 'committee-hearing"", '%U%', '%K%', 'm', '%h%', 'actor', '2009']",170,0.50550747,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:% 200%', 'USA:%200%', 'm', 'C%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:% 199%', 'USA:%201%', 'm', 'H%', 'actor', '2008']",163,0.4990701,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Logan Aria)', '(HÃ©rodiade)', '(as Miss Elizabeth)', '(as Kenneth Mok)"", '[fr]', 'printed media reviews', ""action-hero', 'threshold', 'christmas-food', 'pre-adolescent', 'condoning-suicide"", '%9%', '%n%', 'm', '%r%', 'actor', '1990']",170,0.51585454,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Ann C. Johnson)', '(dancer)', '(as Helene Mahieu)', '(stand-in: Cody)"", '[br]', 'trivia', ""voice-sampling', 'whiskey-runner', 'gang-summit', 'print-services', 'tarkovsky"", '%i%', '%n%', 'm', '%s%', 'actor', '1990']",163,0.5088692,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)"", '[us]', 'genres', ""murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder"", '%o%', '%r%', 'm', '%Merv%', 'actor', '2000']",163,0.4980741,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Lachelle)', '(as Francis M)', '(as Donna Dare)', '(as Natalia Harris)"", '[us]', 'budget', ""weapons-research', 'female-stalker', 'world-trade', 'free-agency', 'alfred-wainwright"", '%,%', '%0%', 'm', '%r%', 'actor', '1990']",170,0.50165987,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(as Joe-B)', '(as Noel Torren)', '(as Dr Ross Stein)', '(as Wendy Slick)"", '[us]', 'countries', ""hanging', '1911-38-super', 'ex-nobleman', 'self-search', 'genetic-code"", '%K%', '%U%', 'm', '%R%', 'actor', '2009']",170,0.5035735,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(producer)', '(voice)', '(production assistant)', '(voice)', '(writer)"", '[fr]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%i%', '%o%', 'm', '%Martin%', 'actor', '2000']",163,0.5041358,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Dominic Young)', '(as I Yu)', '(as J.M. Henry)', '(as Boris)"", '[fr]', 'trivia', ""2020s', 'viral-video', 'everglades', 'uno-floag', 'drift-nets"", '%i%', '%v%', 'm', '%o%', 'actor', '1990']",163,0.49782994,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[fr]', 'countries', ""violence', 'non-fiction', 'friendship', 'father-daughter-relationship', 'non-fiction"", '%i%', '%C%', 'm', '%Bob%', 'actor', '1990']",170,0.5086066,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Mike Wise)', '(as Al Morgenstern)', '(as J.J. Clark)', '(as Nico Papatakis)"", '[br]', 'filming dates', ""android', 'simple-life', 'hyrophobia', 'islamic-mythology', 'talking-pigs-head"", '%c%', '%c%', 'm', '%A%', 'actor', '1990']",170,0.5055873,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(production assistant)', '(uncredited)', '(writer)', '(uncredited)', '(voice)"", '[us]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%Black%', '%l%', 'm', '%Savage%', 'actor', '2005']",163,0.5096631,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%200%', 'Japan:%201%', 'f', 'L%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(supervising producer)', '(executive producer)', '(executive producer)"", '[us]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%mm%', '%1%', 'f', '%Mann%', 'actress', '1943']",163,0.5114801,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[de]', 'release dates', ""based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film"", '%being%', '%S%', 'm', '%Joey%', 'actor', '1972']",170,0.5003731,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[de]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'Japan:%200%', 'USA:% 200%', 'f', '%H%', 'actress', '2005']",170,0.5241599,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[de]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:% 199%', 'USA:% 200%', 'f', 'Z%', 'actress', '2000']",170,0.51860553,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 199%', 'Japan:%2007%', 'f', 'R%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(written by)', '(written by)', '(written by)', '(co-producer)', '(voice)"", '[us]', 'countries', ""female-nudity', 'female-nudity', 'female-nudity', 'murder', 'murder"", '%talking%', '%A%', 'm', '%O%', 'actor', '2007']",170,0.49878773,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 199%', 'Japan:%201%', 'f', 'B%', 'actress', '2010']",170,0.5073973,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(producer)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)"", '[de]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%OFM%', '%i%', 'm', '%Armand%', 'actor', '1983']",163,0.50256664,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Khurshed Khan)', '(as Eva Zora)', '(screenplay) (1972)', '(as Manuel Matos)"", '[fr]', 'printed media reviews', ""android', 'child-crime', 'tasmania', 'skinny', 'rio-grande"", '%4%', '%w%', 'm', '%m%', 'actor', '1990']",170,0.5030008,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[de]', 'release dates', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", 'USA:% 199%', 'USA:% 200%', 'f', '%O%', 'actress', '1950']",170,0.51220274,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%201%', 'Japan:%201%', 'm', 'S%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 200%', 'USA:%201%', 'f', 'Y%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'Japan:%200%', 'USA:%200%', 'f', 'T%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""sex', 'sex', 'sex', 'sex', 'sex"", '%A%', '%S%', 'm', '%Frank%', 'actor', '1997']",163,0.50725996,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[de]', 'genres', ""tv-mini-series', 'sequel', 'male-nudity', 'number-in-title', 'male-nudity"", '%i%', '%S%', 'm', '%Paul%', 'actor', '2012']",170,0.49943286,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'Japan:%201%', 'USA:% 199%', 'm', 'Y%', 'actor', '2005']",170,0.5045142,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""sequel', 'revenge', 'based-on-novel"", 'Japan:%201%', 'USA:%201%', 'f', '%K%', 'actress', '1950']",170,0.51124877,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)"", '[us]', 'genres', ""sequel', 'based-on-play', 'male-nudity', 'death', 'love"", '%U%', '%g%', 'm', '%Paul%', 'actor', '1948']",170,0.50179255,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(producer)', '(executive producer)', '(voice)', '(writer)"", '[us]', 'countries', ""sex', 'sex', 'sex', 'sex', 'sex"", '%Spherical%', '%S%', 'm', '%Richard%', 'actor', '1998']",170,0.4971552,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'Japan:%201%', 'USA:% 200%', 'f', '%I%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 200%', 'Japan:%2007%', 'f', 'Y%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title"", 'Japan:%200%', 'USA:%2008%', 'f', 'K%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(truck shacker)', '(as D. Andreyev)', '(Andrade)', '(as Georgij Miljar)"", '[se]', 'book', ""action-hero', 'cobwebs', 'the-iron-wall', 'tango-singer', 'seducing-a-minor"", '%D%', '%m%', 'm', '%o%', 'actor', '1990']",170,0.5022818,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(writer)', '(script producer)', '(executive producer)', '(voice)', '(writer)"", '[fr]', 'genres', ""female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity"", '%mm%', '%o%', 'm', '%Stephen%', 'actor', '2004']",163,0.5037975,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[de]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'Japan:%201%', 'USA:% 199%', 'f', 'G%', 'actress', '1950']",170,0.51220274,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'Japan:%2007%', 'USA:%201%', 'f', '%K%', 'actress', '2010']",170,0.5073973,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 199%', 'USA:%200%', 'f', 'L%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Kenneth Gamble)', '(as Kay Hartrey)', '(help movies)', '(as Donald Hebb)"", '[us]', 'printed media reviews', ""action-hero', 'peace-symbol', 'island-fortress', 'sacristan', 'thrown-out-naked"", '%1%', '%i%', 'm', '%.%', 'actor', '1990']",170,0.50344443,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 199%', 'USA:%200%', 'f', '%S%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"['(as Charles Tamburro)\', \'(""Voltaire"")\', \'(as Nicoli Lemeni)\', \'(as Kolya Pogodin)\', \'(as Peter Colburn)', '[gb]', 'trivia', ""voice-sampling', 'scaffidi', 'ancient-battle', '2500s', 'clanger"", '%t%', '%t%', 'm', '%s%', 'actor', '1990']",170,0.5112488,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Lesa Donai)', '(as Kirsti Bourne)', '(as Bob Cosci)', '(as Luis Noguiera)"", '[es]', 'trivia', ""android', 'brewery-worker', 'tb-test', 'hydrotherapy', 'carp"", '%t%', '%d%', 'm', '%r%', 'actor', '1990']",163,0.50152874,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(uncredited)', '(associate producer)', '(written by)', '(producer)', '(production assistant)"", '[us]', 'release dates', ""murder', 'murder', 'female-nudity', 'female-nudity', 'murder"", '%and%', '%PFM%', 'f', '%Ho%', 'actress', '2011']",163,0.5030844,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as A. Tatarskiy)', '(14 episodes 1997-)', '(as Roger Alford)', '(as Ben Weldon)"", '[nl]', 'rentals', ""battle', 'guide-animal', 'long-running-tv', 'christian-theme', 'pulsating-image"", '%0%', '%0%', 'm', '%e%', 'actor', '1990']",170,0.5077039,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Lev Grossman)', '(as Tamara Jackson)', '(as Buddy Windrush)', '(as T. Klotz)"", '[fr]', 'tech info', ""battle', 'in-flight-magazine', 'sajuaro-cactus', 'invisible-children', 'shadow-on-wall"", '%C%', '%P%', 'm', '%a%', 'actor', '1990']",163,0.50274795,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Budd Stout)', '(fence master)', '(as Ben Salisbury)', '(as Ben Gordon)"", '[fr]', 'novel', ""2020s', 'hokianga', 'flip-phone', 'sandpoint', 'polka-dot-dress"", '%k%', '%R%', 'm', '%b%', 'actor', '1990']",170,0.49619687,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(production assistant)', '(uncredited)', '(voice)', '(producer)"", '[gb]', 'release dates', ""female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder"", '%delinquent%', '%o%', 'm', '%Silvera%', 'actor', '2002']",170,0.50649714,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:%200%', 'USA:%201%', 'f', 'R%', 'actress', '1950']",170,0.51124877,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[us]', 'genres', ""father-son-relationship', 'tv-mini-series', 'number-in-title', 'nudity', 'anal-sex"", '%A%', '%r%', 'm', '%Joe%', 'actor', '2001']",170,0.50709885,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'USA:%2008%', 'USA:%200%', 'f', '%Z%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(production assistant)', '(uncredited)', '(voice)', '(uncredited)"", '[us]', 'genres', ""female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity"", '%l%', '%M%', 'f', '%Bobby%', 'actress', '1966']",170,0.5034113,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Mike Badalucco)', '(as Doug Stewart)', '(as Saundarya)', '(as Ã\x81gnes Zsiros)"", '[nl]', 'adaption', ""battle', 'grand-prize', 'female-porn', 'shohreh-aghdashloo', 'laughing-mask"", '%i%', '%8%', 'm', '%A%', 'actor', '1990']",163,0.49655184,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""sequel', 'revenge', 'based-on-novel"", 'USA:% 200%', 'USA:%201%', 'f', '%G%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Gene LaMotte)', '(as H. RuzickovÃ¡)', '(as Maddie Johnson)', '(as Jodee Tochi)"", '[es]', 'tech info', ""voice-sampling', 'samba-dance', 'self-defense-force', 'tv-signal', 'secret-ingredient"", '%2%', '%T%', 'm', '%r%', 'actor', '1990']",170,0.5022969,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:% 200%', 'USA:% 199%', 'f', 'O%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[us]', 'countries', ""based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film"", '%n%', '%S%', 'm', '%Jordan%', 'actor', '2004']",170,0.5099154,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as S. Sokolovic)', '(clothes: Menudo)', '(as Mancow Muller)', '(as Mel Zwyer)"", '[nl]', 'tech info', ""weapons-research', 'scratched-inside', 'blood-legion', 'political-club', 'miniature-oscar"", '%s%', '%n%', 'm', '%h%', 'actor', '1990']",163,0.5090783,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:%200%', 'USA:% 200%', 'f', 'N%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[ru]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 200%', 'Japan:%201%', 'm', '%C%', 'actor', '2005']",170,0.5137851,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(Naive Actor)', '(Benjamin Roux)', '(publicist: Spain)', '(2-nd episode)"", '[us]', 'quotes', ""general-store', 'evening-class', 'health-fanaticism', 'male-slaps-female', 'giant-moth"", '%n%', '%g%', 'm', '%t%', 'actor', '2009']",60,0.5001588,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n an) NestLoop(k mk t ci rt n an chn) NestLoop(k mk t ci rt n an chn mi) NestLoop(k mk t ci rt n an chn mi it) NestLoop(k mk t ci rt n an chn mi it mc) NestLoop(k mk t ci rt n an chn mi it mc cn) Leading((((((((((((k mk) t) ci) rt) n) an) chn) mi) it) mc) cn)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[us]', 'release dates', ""independent-film', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel"", '%o%', '%r%', 'm', '%W%', 'actor', '2003']",170,0.50677556,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Sreehari Nanu)', '(as J. KrejcikovÃ¡)', '(unit nurse: Italy)', '(as Graham Blicq)"", '[es]', 'novel', ""weapons-research', 'fallen-idol', 'pork-sausage', 'pulp-fiction', 'gnome"", '%m%', '%1%', 'm', '%r%', 'actor', '1990']",170,0.50505143,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""hero', 'martial-arts', 'hand-to-hand-combat"", 'USA:% 200%', 'Japan:%2007%', 'f', '%N%', 'actress', '2005']",170,0.51375026,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(supervising producer)', '(archive footage)', '(production coordinator)"", '[gb]', 'release dates', ""murder', 'female-nudity', 'murder', 'murder', 'female-nudity"", '%U%', '%s%', 'm', '%Young%', 'actor', '2006']",170,0.5105781,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'genres', ""female-nudity', 'female-nudity', 'murder', 'female-nudity', 'murder"", '%35%', '%o%', 'm', '%Frank%', 'actor', '2007']",163,0.51029074,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(executive producer)', '(voice)', '(voice)', '(executive producer)', '(executive producer)"", '[de]', 'genres', ""female-nudity', 'murder', 'female-nudity', 'murder', 'female-nudity"", '%o%', '%mm%', 'm', '%Joe%', 'actor', '1975']",170,0.5031981,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)"", '[us]', 'release dates', ""hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore"", '%o%', '%Lt%', 'm', '%Bradley%', 'actor', '1964']",163,0.49746412,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(as Ignacio BruÃ±a)', '(as Cindy McCain)', '(bear double)', '(as Winfried Klaus)"", '[se]', 'printed media reviews', ""android', 'poster-art', 'christmas-episode', 'covered-in-tar', 'lactate-threshold"", '%u%', '%.%', 'm', '%o%', 'actor', '1990']",170,0.5057902,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as J.R.Larrath)', '(as G.Gotovchits)', '(as Robert Blood)', '(as DJ August)"", '[es]', 'weekend gross', ""2020s', 'workbook', 'school-integration', 'safety-catch', 'bunny-costume"", '%4%', '%9%', 'm', '%A%', 'actor', '1990']",170,0.50562495,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(associate producer)', '(associate producer)', '(associate producer)', '(producer)', '(uncredited)"", '[us]', 'release dates', ""independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film"", '%y%', '%o%', 'm', '%Franco%', 'actor', '1996']",170,0.50537264,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(animal coordinator)', '(voice)', '(executive producer)', '(producer)', '(creator)"", '[us]', 'release dates', ""female-nudity', 'murder', 'female-nudity', 'murder', 'murder"", '%stay%', '%o%', 'm', '%C%', 'actor', '2009']",163,0.4927667,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""sequel', 'revenge', 'based-on-novel"", 'Japan:%201%', 'USA:%200%', 'f', 'T%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:%200%', 'Japan:%2007%', 'm', '%Angel%', 'actor', '2000']",170,0.5053204,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(script supervisor)', '(uncredited)', '(production coordinator)', '(voice)', '(co-executive producer)"", '[us]', 'release dates', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%mm%', '%o%', 'f', '%MacFarlane%', 'actress', '1968']",170,0.50546485,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(as Charles Tamburro)', '(as Curtis Scott)', '(as Lem Pelayo)', '(theme song)', '(Patsy''s Sister)"", '[es]', 'trivia', ""weapons-research', 'boy', 'eisner-award', 'jewish-studies', 'alone-in-house"", '%i%', '%.%', 'm', '%h%', 'actor', '1990']",163,0.4985577,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:% 199%', 'USA:% 200%', 'f', 'A%', 'actress', '2000']",170,0.51479244,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice)', '(voice)', '(voice)', '(voice)"", '[us]', 'release dates', ""female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity"", '%C%', '%Spherical%', 'm', '%Ho%', 'actor', '2005']",170,0.50503165,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(executive producer)', '(writer)', '(writer)', '(uncredited)', '(executive producer)"", '[us]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%E%', '%S%', 'm', '%Friedman%', 'actor', '1986']",170,0.5052469,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(supervising producer)', '(executive producer)', '(written by)', '(credit only)', '(archive footage)"", '[us]', 'genres', ""character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title"", '%i%', '%o%', 'm', '%Joe%', 'actor', '2000']",163,0.5029028,/*+  SeqScan(mc) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexOnlyScan(an person_id_aka_name) IndexScan(it info_type_pkey) NestLoop(k mk) HashJoin(mc k mk) HashJoin(mc k mk cn) NestLoop(mc k mk cn t) NestLoop(mc k mk cn t ci) HashJoin(mc k mk cn t ci rt) NestLoop(mc k mk cn t ci rt chn) NestLoop(mc k mk cn t ci rt chn n) NestLoop(mc k mk cn t ci rt chn n mi) NestLoop(mc k mk cn t ci rt chn n mi an) NestLoop(mc k mk cn t ci rt chn n mi an it) Leading(((((((((((mc (k mk)) cn) t) ci) rt) chn) n) mi) an) it)) */
0,"[""(as Charles Tamburro)', '(Mother of Mike)', '(as Ezio Cristiani)', '(as Hugh Arden)', '(as Ned Vukovich)"", '[us]', 'rentals', ""battle', 'tunnel-builder', 'community-media', 'disco-bar', 'weapon-collection"", '%9%', '%0%', 'm', '%l%', 'actor', '1990']",170,0.5060188,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'murder-in-title', 'blood', 'violence"", 'USA:% 200%', 'USA:%2008%', 'f', 'P%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'USA:% 199%', 'Japan:%2007%', 'f', '%F%', 'actress', '1990']",170,0.51006037,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '[us]', 'release dates', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'USA:%201%', 'USA:% 200%', 'f', 'F%', 'actress', '2010']",170,0.5073973,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
