query,plan_id,plan_content
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 13 and 32
and cd_marital_status = 'W'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 122 and 136
and s2.ss_list_price between 122 and 136
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Men                                               ', 'Sports')
and item2.i_manager_id between 12 and 86
and cd_marital_status = 'S'
and cd_education_status = 'College'
and s1.ss_list_price between 55 and 198
and s2.ss_list_price between 119 and 156
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Men')
and item2.i_manager_id between 49 and 68
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 20 and 34
and s2.ss_list_price between 20 and 34
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Women')
and item2.i_manager_id between 74 and 93
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 220 and 234
and s2.ss_list_price between 220 and 234
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Electronics                                       ', 'Sports')
and item2.i_manager_id between 11 and 45
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 32 and 33
and s2.ss_list_price between 9 and 107
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2003 and 2003 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 6 and 39
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 46 and 84
and s2.ss_list_price between 63 and 125
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 61 and 80
and cd_marital_status = 'M'
and cd_education_status = 'College'
and s1.ss_list_price between 42 and 257
and s2.ss_list_price between 46 and 58
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 54 and 73
and cd_marital_status = 'S'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 155 and 169
and s2.ss_list_price between 155 and 169
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Jewelry                                           ', 'Home')
and item2.i_manager_id between 36 and 72
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 55 and 234
and s2.ss_list_price between 52 and 164
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 7 and 26
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 80 and 94
and s2.ss_list_price between 80 and 94
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 81 and 95
and s2.ss_list_price between 81 and 95
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Men                                               ', 'Jewelry')
and item2.i_manager_id between 25 and 31
and cd_marital_status = 'U'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 25 and 142
and s2.ss_list_price between 23 and 47
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 27 and 32
and cd_marital_status = 'D'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 32 and 52
and s2.ss_list_price between 28 and 79
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 45 and 64
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 194 and 208
and s2.ss_list_price between 194 and 208
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Men')
and item2.i_manager_id between 17 and 48
and cd_marital_status = 'M'
and cd_education_status = 'Primary'
and s1.ss_list_price between 53 and 73
and s2.ss_list_price between 31 and 88
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 57 and 76
and cd_marital_status = 'M'
and cd_education_status = 'Primary'
and s1.ss_list_price between 254 and 268
and s2.ss_list_price between 254 and 268
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 8 and 93
and cd_marital_status = 'M'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 75 and 249
and s2.ss_list_price between 31 and 96
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Sports                                            ', 'Electronics')
and item2.i_manager_id between 33 and 89
and cd_marital_status = 'D'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 44 and 208
and s2.ss_list_price between 13 and 153
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 58 and 95
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 97 and 191
and s2.ss_list_price between 91 and 173
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Sports                                            ', 'Children')
and item2.i_manager_id between 35 and 58
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 44 and 128
and s2.ss_list_price between 32 and 75
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 53 and 74
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 53 and 243
and s2.ss_list_price between 17 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Men', 'Shoes')
and item2.i_manager_id between 27 and 46
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 248 and 262
and s2.ss_list_price between 248 and 262
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Sports                                            ', 'Sports')
and item2.i_manager_id between 82 and 94
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 96 and 268
and s2.ss_list_price between 1 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Children                                          ', 'Music')
and item2.i_manager_id between 52 and 63
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 26 and 58
and s2.ss_list_price between 8 and 88
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 38 and 76
and cd_marital_status = 'M'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 75 and 100
and s2.ss_list_price between 62 and 145
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Men                                               ', 'Children')
and item2.i_manager_id between 34 and 92
and cd_marital_status = 'M'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 39 and 87
and s2.ss_list_price between 1 and 143
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Shoes                                             ', 'Shoes')
and item2.i_manager_id between 5 and 29
and cd_marital_status = 'M'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 76 and 133
and s2.ss_list_price between 123 and 236
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 14 and 33
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 122 and 136
and s2.ss_list_price between 122 and 136
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Sports                                            ', 'Electronics')
and item2.i_manager_id between 21 and 56
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 76 and 89
and s2.ss_list_price between 64 and 92
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Books')
and item2.i_manager_id between 1 and 90
and cd_marital_status = 'D'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 33 and 278
and s2.ss_list_price between 1 and 73
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 23 and 35
and cd_marital_status = 'U'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 31 and 214
and s2.ss_list_price between 155 and 186
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Shoes')
and item2.i_manager_id between 51 and 95
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 55 and 58
and s2.ss_list_price between 41 and 56
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Books                                             ', 'Shoes')
and item2.i_manager_id between 49 and 60
and cd_marital_status = 'D'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 12 and 58
and s2.ss_list_price between 26 and 64
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Home                                              ', 'Home')
and item2.i_manager_id between 60 and 99
and cd_marital_status = 'U'
and cd_education_status = 'College'
and s1.ss_list_price between 45 and 216
and s2.ss_list_price between 48 and 147
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 29 and 38
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 27 and 97
and s2.ss_list_price between 1 and 51
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Women')
and item2.i_manager_id between 14 and 33
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 123 and 137
and s2.ss_list_price between 123 and 137
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Jewelry', 'Men')
and item2.i_manager_id between 14 and 33
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 95 and 109
and s2.ss_list_price between 95 and 109
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 6 and 26
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 16 and 243
and s2.ss_list_price between 100 and 268
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2003 and 2003 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Jewelry                                           ', 'Home')
and item2.i_manager_id between 45 and 57
and cd_marital_status = 'M'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 45 and 195
and s2.ss_list_price between 92 and 173
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 73 and 92
and cd_marital_status = 'S'
and cd_education_status = 'Primary'
and s1.ss_list_price between 161 and 175
and s2.ss_list_price between 161 and 175
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 7 and 26
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 201 and 215
and s2.ss_list_price between 201 and 215
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Men')
and item2.i_manager_id between 6 and 25
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 153 and 167
and s2.ss_list_price between 153 and 167
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 27 and 41
and s2.ss_list_price between 27 and 41
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 23 and 71
and cd_marital_status = 'S'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 28 and 149
and s2.ss_list_price between 2 and 78
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 51 and 70
and cd_marital_status = 'S'
and cd_education_status = 'Primary'
and s1.ss_list_price between 61 and 75
and s2.ss_list_price between 61 and 75
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Sports                                            ', 'Women')
and item2.i_manager_id between 68 and 71
and cd_marital_status = 'M'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 76 and 143
and s2.ss_list_price between 55 and 108
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 24 and 31
and cd_marital_status = 'U'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 73 and 278
and s2.ss_list_price between 103 and 199
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 86 and 100
and s2.ss_list_price between 86 and 100
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Electronics')
and item2.i_manager_id between 59 and 78
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 143 and 157
and s2.ss_list_price between 143 and 157
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Home', 'Women')
and item2.i_manager_id between 6 and 25
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 26 and 40
and s2.ss_list_price between 26 and 40
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Men', 'Women')
and item2.i_manager_id between 3 and 22
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 201 and 215
and s2.ss_list_price between 201 and 215
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 8 and 27
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 176 and 190
and s2.ss_list_price between 176 and 190
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 30 and 49
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 64 and 78
and s2.ss_list_price between 64 and 78
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Home')
and item2.i_manager_id between 48 and 67
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 12 and 26
and s2.ss_list_price between 12 and 26
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 53 and 72
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 252 and 266
and s2.ss_list_price between 252 and 266
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Women')
and item2.i_manager_id between 36 and 55
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 244 and 258
and s2.ss_list_price between 244 and 258
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2003 and 2003 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Books                                             ', 'Books')
and item2.i_manager_id between 10 and 80
and cd_marital_status = 'S'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 38 and 58
and s2.ss_list_price between 52 and 89
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry', 'Men', 'Women')
and item2.i_manager_id between 25 and 44
and cd_marital_status = 'M'
and cd_education_status = 'Primary'
and s1.ss_list_price between 40 and 54
and s2.ss_list_price between 40 and 54
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 1 and 20
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 119 and 133
and s2.ss_list_price between 119 and 133
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 30 and 49
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 87 and 101
and s2.ss_list_price between 87 and 101
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Women')
and item2.i_manager_id between 43 and 62
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 13 and 27
and s2.ss_list_price between 13 and 27
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Shoes                                             ', 'Books')
and item2.i_manager_id between 7 and 74
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 89 and 169
and s2.ss_list_price between 26 and 117
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Men                                               ', 'Children')
and item2.i_manager_id between 90 and 95
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 35 and 112
and s2.ss_list_price between 46 and 186
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 43 and 62
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 25 and 39
and s2.ss_list_price between 25 and 39
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 15 and 34
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 51 and 65
and s2.ss_list_price between 51 and 65
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 26 and 67
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 2 and 134
and s2.ss_list_price between 25 and 125
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 59 and 77
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 13 and 123
and s2.ss_list_price between 79 and 128
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Shoes                                             ', 'Shoes')
and item2.i_manager_id between 26 and 26
and cd_marital_status = 'S'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 29 and 289
and s2.ss_list_price between 11 and 221
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 30 and 49
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 75 and 89
and s2.ss_list_price between 75 and 89
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 72 and 91
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 136 and 150
and s2.ss_list_price between 136 and 150
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Sports                                            ', 'Home')
and item2.i_manager_id between 18 and 71
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 119 and 226
and s2.ss_list_price between 69 and 221
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 46 and 65
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 172 and 186
and s2.ss_list_price between 172 and 186
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Women')
and item2.i_manager_id between 72 and 91
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 43 and 57
and s2.ss_list_price between 43 and 57
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Men')
and item2.i_manager_id between 80 and 99
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 181 and 195
and s2.ss_list_price between 181 and 195
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Shoes')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 99 and 113
and s2.ss_list_price between 99 and 113
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Sports                                            ', 'Children')
and item2.i_manager_id between 15 and 29
and cd_marital_status = 'D'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 1 and 221
and s2.ss_list_price between 28 and 58
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 3 and 22
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 164 and 178
and s2.ss_list_price between 164 and 178
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 94 and 97
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 72 and 144
and s2.ss_list_price between 69 and 211
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 34 and 83
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 41 and 55
and s2.ss_list_price between 31 and 103
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Shoes                                             ', 'Sports')
and item2.i_manager_id between 6 and 81
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 24 and 284
and s2.ss_list_price between 2 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 61 and 74
and cd_marital_status = 'S'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 58 and 100
and s2.ss_list_price between 60 and 128
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 51 and 70
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 81 and 95
and s2.ss_list_price between 81 and 95
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Jewelry')
and item2.i_manager_id between 79 and 98
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 59 and 73
and s2.ss_list_price between 59 and 73
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 54 and 73
and cd_marital_status = 'U'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 173 and 187
and s2.ss_list_price between 173 and 187
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Men')
and item2.i_manager_id between 43 and 62
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 108 and 122
and s2.ss_list_price between 108 and 122
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Shoes                                             ', 'Shoes')
and item2.i_manager_id between 33 and 85
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 12 and 118
and s2.ss_list_price between 24 and 208
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Jewelry                                           ', 'Books')
and item2.i_manager_id between 3 and 88
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 69 and 119
and s2.ss_list_price between 55 and 72
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Men                                               ', 'Sports')
and item2.i_manager_id between 17 and 60
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 96 and 228
and s2.ss_list_price between 49 and 183
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 60 and 79
and cd_marital_status = 'S'
and cd_education_status = 'Primary'
and s1.ss_list_price between 117 and 131
and s2.ss_list_price between 117 and 131
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home', 'Jewelry', 'Shoes')
and item2.i_manager_id between 44 and 63
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 25 and 39
and s2.ss_list_price between 25 and 39
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Home')
and item2.i_manager_id between 14 and 33
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 4 and 18
and s2.ss_list_price between 4 and 18
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2003 and 2003 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Books                                             ', 'Men')
and item2.i_manager_id between 41 and 91
and cd_marital_status = 'U'
and cd_education_status = 'College'
and s1.ss_list_price between 79 and 254
and s2.ss_list_price between 12 and 120
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 93 and 98
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 73 and 81
and s2.ss_list_price between 31 and 151
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Women')
and item2.i_manager_id between 100 and 119
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 194 and 208
and s2.ss_list_price between 194 and 208
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Electronics                                       ', 'Children')
and item2.i_manager_id between 10 and 73
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 49 and 163
and s2.ss_list_price between 58 and 240
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Men')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 183 and 197
and s2.ss_list_price between 183 and 197
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 28 and 47
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 44 and 58
and s2.ss_list_price between 44 and 58
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Music')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 175 and 189
and s2.ss_list_price between 175 and 189
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Men')
and item2.i_manager_id between 33 and 52
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 186 and 200
and s2.ss_list_price between 186 and 200
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 89 and 93
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 41 and 97
and s2.ss_list_price between 34 and 98
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Jewelry                                           ', 'Jewelry')
and item2.i_manager_id between 24 and 26
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 39 and 78
and s2.ss_list_price between 24 and 72
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 80 and 99
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 55 and 69
and s2.ss_list_price between 55 and 69
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Men                                               ', 'Children')
and item2.i_manager_id between 17 and 80
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 24 and 102
and s2.ss_list_price between 86 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Women')
and item2.i_manager_id between 41 and 60
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 227 and 241
and s2.ss_list_price between 227 and 241
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Women')
and item2.i_manager_id between 59 and 78
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 10 and 24
and s2.ss_list_price between 10 and 24
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 2 and 53
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 37 and 75
and s2.ss_list_price between 12 and 138
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 9 and 28
and cd_marital_status = 'S'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 171 and 185
and s2.ss_list_price between 171 and 185
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Electronics                                       ', 'Shoes')
and item2.i_manager_id between 57 and 88
and cd_marital_status = 'U'
and cd_education_status = 'Primary'
and s1.ss_list_price between 12 and 198
and s2.ss_list_price between 15 and 42
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Women')
and item2.i_manager_id between 36 and 55
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 44 and 58
and s2.ss_list_price between 44 and 58
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Music                                             ', 'Jewelry')
and item2.i_manager_id between 7 and 74
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 72 and 170
and s2.ss_list_price between 87 and 147
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Shoes                                             ', 'Women')
and item2.i_manager_id between 56 and 69
and cd_marital_status = 'M'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 11 and 136
and s2.ss_list_price between 108 and 153
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Electronics                                       ', 'Books')
and item2.i_manager_id between 67 and 71
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 112 and 263
and s2.ss_list_price between 64 and 145
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 24 and 43
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 229 and 243
and s2.ss_list_price between 229 and 243
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 28 and 47
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 106 and 120
and s2.ss_list_price between 106 and 120
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Men')
and item2.i_manager_id between 56 and 75
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 221 and 235
and s2.ss_list_price between 221 and 235
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Music')
and item2.i_manager_id between 16 and 35
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 103 and 117
and s2.ss_list_price between 103 and 117
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 6 and 47
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 1 and 168
and s2.ss_list_price between 2 and 76
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Children                                          ', 'Women')
and item2.i_manager_id between 26 and 91
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 66 and 230
and s2.ss_list_price between 27 and 174
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Jewelry                                           ', 'Home')
and item2.i_manager_id between 20 and 37
and cd_marital_status = 'D'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 31 and 268
and s2.ss_list_price between 121 and 137
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Jewelry')
and item2.i_manager_id between 42 and 61
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 70 and 84
and s2.ss_list_price between 70 and 84
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Women')
and item2.i_manager_id between 26 and 45
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 62 and 76
and s2.ss_list_price between 62 and 76
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 53 and 53
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 51 and 100
and s2.ss_list_price between 57 and 76
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Shoes                                             ', 'Books')
and item2.i_manager_id between 60 and 93
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 38 and 114
and s2.ss_list_price between 12 and 83
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Women')
and item2.i_manager_id between 40 and 59
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 186 and 200
and s2.ss_list_price between 186 and 200
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 13 and 32
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 17 and 92
and s2.ss_list_price between 39 and 88
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 45 and 86
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 46 and 234
and s2.ss_list_price between 55 and 203
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Electronics')
and item2.i_manager_id between 35 and 54
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 125 and 139
and s2.ss_list_price between 125 and 139
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 23 and 42
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 180 and 194
and s2.ss_list_price between 180 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Women')
and item2.i_manager_id between 12 and 31
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 102 and 116
and s2.ss_list_price between 102 and 116
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 2 and 18
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 12 and 176
and s2.ss_list_price between 28 and 144
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Home                                              ', 'Books')
and item2.i_manager_id between 26 and 55
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 44 and 114
and s2.ss_list_price between 35 and 78
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 141 and 155
and s2.ss_list_price between 141 and 155
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 19 and 57
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 121 and 131
and s2.ss_list_price between 12 and 226
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Electronics')
and item2.i_manager_id between 27 and 46
and cd_marital_status = 'W'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 217 and 231
and s2.ss_list_price between 217 and 231
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 14 and 52
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 51 and 82
and s2.ss_list_price between 45 and 75
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2003 and 2003 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Books                                             ', 'Children')
and item2.i_manager_id between 32 and 60
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 112 and 247
and s2.ss_list_price between 125 and 156
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 22 and 85
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 2 and 64
and s2.ss_list_price between 23 and 30
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 49 and 75
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 14 and 100
and s2.ss_list_price between 39 and 62
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 58 and 77
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 286 and 300
and s2.ss_list_price between 286 and 300
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Women')
and item2.i_manager_id between 51 and 70
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 91 and 105
and s2.ss_list_price between 91 and 105
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 4 and 96
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 21 and 203
and s2.ss_list_price between 82 and 133
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Men                                               ', 'Children')
and item2.i_manager_id between 24 and 32
and cd_marital_status = 'U'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 27 and 98
and s2.ss_list_price between 27 and 119
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Jewelry', 'Men')
and item2.i_manager_id between 36 and 55
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 152 and 166
and s2.ss_list_price between 152 and 166
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Women')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 3 and 17
and s2.ss_list_price between 3 and 17
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Electronics')
and item2.i_manager_id between 44 and 63
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 17 and 31
and s2.ss_list_price between 17 and 31
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Home                                              ', 'Home')
and item2.i_manager_id between 29 and 86
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 162 and 164
and s2.ss_list_price between 65 and 216
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry                                           ', 'Children                                          ', 'Books')
and item2.i_manager_id between 65 and 77
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 29 and 35
and s2.ss_list_price between 1 and 278
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Books                                             ', 'Books')
and item2.i_manager_id between 6 and 42
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 49 and 91
and s2.ss_list_price between 1 and 52
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Women')
and item2.i_manager_id between 34 and 53
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 137 and 151
and s2.ss_list_price between 137 and 151
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 28 and 47
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 73 and 87
and s2.ss_list_price between 73 and 87
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Women')
and item2.i_manager_id between 8 and 27
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 98 and 112
and s2.ss_list_price between 98 and 112
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Home', 'Women')
and item2.i_manager_id between 18 and 37
and cd_marital_status = 'S'
and cd_education_status = 'Primary'
and s1.ss_list_price between 182 and 196
and s2.ss_list_price between 182 and 196
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 22 and 68
and cd_marital_status = 'U'
and cd_education_status = 'College'
and s1.ss_list_price between 92 and 158
and s2.ss_list_price between 56 and 96
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Sports                                            ', 'Sports')
and item2.i_manager_id between 35 and 58
and cd_marital_status = 'U'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 37 and 76
and s2.ss_list_price between 51 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Children                                          ', 'Sports')
and item2.i_manager_id between 56 and 60
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 90 and 104
and s2.ss_list_price between 13 and 203
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Music')
and item2.i_manager_id between 1 and 20
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 101 and 115
and s2.ss_list_price between 101 and 115
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Jewelry')
and item2.i_manager_id between 72 and 91
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 23 and 37
and s2.ss_list_price between 23 and 37
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Women')
and item2.i_manager_id between 56 and 75
and cd_marital_status = 'S'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 165 and 179
and s2.ss_list_price between 165 and 179
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Sports')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'S'
and cd_education_status = 'College'
and s1.ss_list_price between 182 and 196
and s2.ss_list_price between 182 and 196
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 215 and 229
and s2.ss_list_price between 215 and 229
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Shoes')
and item2.i_manager_id between 69 and 90
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 55 and 119
and s2.ss_list_price between 24 and 64
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Women                                             ', 'Shoes')
and item2.i_manager_id between 55 and 59
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 65 and 91
and s2.ss_list_price between 26 and 73
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Jewelry')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 25 and 39
and s2.ss_list_price between 25 and 39
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 25 and 37
and cd_marital_status = 'S'
and cd_education_status = 'Primary'
and s1.ss_list_price between 34 and 37
and s2.ss_list_price between 15 and 125
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Children                                          ', 'Children')
and item2.i_manager_id between 2 and 11
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 17 and 64
and s2.ss_list_price between 11 and 64
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 57 and 57
and cd_marital_status = 'D'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 97 and 169
and s2.ss_list_price between 103 and 118
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 59 and 78
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 21 and 35
and s2.ss_list_price between 21 and 35
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Home                                              ', 'Children')
and item2.i_manager_id between 21 and 63
and cd_marital_status = 'U'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 55 and 62
and s2.ss_list_price between 6 and 194
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Jewelry', 'Women')
and item2.i_manager_id between 67 and 86
and cd_marital_status = 'D'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 199 and 213
and s2.ss_list_price between 199 and 213
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Home')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'U'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 63 and 77
and s2.ss_list_price between 63 and 77
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 46 and 65
and cd_marital_status = 'S'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 188 and 202
and s2.ss_list_price between 188 and 202
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 17 and 28
and cd_marital_status = 'W'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 117 and 136
and s2.ss_list_price between 91 and 258
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Children', 'Jewelry')
and item2.i_manager_id between 73 and 92
and cd_marital_status = 'M'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 236 and 250
and s2.ss_list_price between 236 and 250
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Men')
and item2.i_manager_id between 45 and 64
and cd_marital_status = 'W'
and cd_education_status = 'College'
and s1.ss_list_price between 124 and 138
and s2.ss_list_price between 124 and 138
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Children                                          ', 'Children')
and item2.i_manager_id between 29 and 83
and cd_marital_status = 'D'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 16 and 35
and s2.ss_list_price between 29 and 72
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Electronics                                       ', 'Electronics')
and item2.i_manager_id between 44 and 46
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 118 and 194
and s2.ss_list_price between 32 and 203
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Home                                              ', 'Home')
and item2.i_manager_id between 45 and 58
and cd_marital_status = 'U'
and cd_education_status = 'Primary'
and s1.ss_list_price between 37 and 49
and s2.ss_list_price between 12 and 108
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry', 'Men', 'Women')
and item2.i_manager_id between 27 and 46
and cd_marital_status = 'M'
and cd_education_status = 'Primary'
and s1.ss_list_price between 112 and 126
and s2.ss_list_price between 112 and 126
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Men')
and item2.i_manager_id between 9 and 28
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 60 and 74
and s2.ss_list_price between 60 and 74
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Jewelry                                           ', 'Men')
and item2.i_manager_id between 49 and 90
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 15 and 100
and s2.ss_list_price between 46 and 87
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Shoes                                             ', 'Children                                          ', 'Books')
and item2.i_manager_id between 53 and 55
and cd_marital_status = 'S'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 96 and 117
and s2.ss_list_price between 72 and 203
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Men', 'Sports')
and item2.i_manager_id between 23 and 42
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 101 and 115
and s2.ss_list_price between 101 and 115
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Jewelry')
and item2.i_manager_id between 14 and 33
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 258 and 272
and s2.ss_list_price between 258 and 272
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 24 and 43
and cd_marital_status = 'D'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 80 and 94
and s2.ss_list_price between 80 and 94
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Books                                             ', 'Music')
and item2.i_manager_id between 20 and 20
and cd_marital_status = 'U'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 26 and 198
and s2.ss_list_price between 38 and 51
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 81 and 100
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 241 and 255
and s2.ss_list_price between 241 and 255
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books                                             ', 'Men                                               ', 'Men')
and item2.i_manager_id between 26 and 50
and cd_marital_status = 'U'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 12 and 105
and s2.ss_list_price between 95 and 170
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Men                                               ', 'Children                                          ', 'Men')
and item2.i_manager_id between 76 and 92
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 1 and 80
and s2.ss_list_price between 22 and 181
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics', 'Home', 'Women')
and item2.i_manager_id between 100 and 119
and cd_marital_status = 'D'
and cd_education_status = 'Primary'
and s1.ss_list_price between 3 and 17
and s2.ss_list_price between 3 and 17
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Shoes')
and item2.i_manager_id between 48 and 98
and cd_marital_status = 'U'
and cd_education_status = 'College'
and s1.ss_list_price between 28 and 35
and s2.ss_list_price between 23 and 172
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children                                          ', 'Jewelry                                           ', 'Sports')
and item2.i_manager_id between 14 and 27
and cd_marital_status = 'W'
and cd_education_status = 'Secondary'
and s1.ss_list_price between 117 and 169
and s2.ss_list_price between 40 and 223
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Women')
and item2.i_manager_id between 25 and 44
and cd_marital_status = 'D'
and cd_education_status = 'College'
and s1.ss_list_price between 128 and 142
and s2.ss_list_price between 128 and 142
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2000 and 2000 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Women                                             ', 'Home')
and item2.i_manager_id between 25 and 64
and cd_marital_status = 'U'
and cd_education_status = 'Unknown'
and s1.ss_list_price between 2 and 190
and s2.ss_list_price between 49 and 100
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2002 and 2002 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Sports                                            ', 'Children                                          ', 'Shoes')
and item2.i_manager_id between 57 and 76
and cd_marital_status = 'S'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 26 and 82
and s2.ss_list_price between 28 and 70
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Home                                              ', 'Books                                             ', 'Books')
and item2.i_manager_id between 1 and 46
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 28 and 228
and s2.ss_list_price between 13 and 183
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Home', 'Jewelry')
and item2.i_manager_id between 48 and 67
and cd_marital_status = 'M'
and cd_education_status = 'College'
and s1.ss_list_price between 131 and 145
and s2.ss_list_price between 131 and 145
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 2001 and 2001 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Electronics                                       ', 'Electronics                                       ', 'Shoes')
and item2.i_manager_id between 8 and 15
and cd_marital_status = 'U'
and cd_education_status = 'College'
and s1.ss_list_price between 12 and 57
and s2.ss_list_price between 51 and 123
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1999 and 1999 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Women                                             ', 'Shoes                                             ', 'Women')
and item2.i_manager_id between 20 and 61
and cd_marital_status = 'S'
and cd_education_status = '2 yr Degree'
and s1.ss_list_price between 2 and 155
and s2.ss_list_price between 70 and 92
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Books', 'Electronics', 'Men')
and item2.i_manager_id between 27 and 46
and cd_marital_status = 'D'
and cd_education_status = '4 yr Degree'
and s1.ss_list_price between 233 and 247
and s2.ss_list_price between 233 and 247
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
"SELECT min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Children', 'Electronics', 'Jewelry')
and item2.i_manager_id between 23 and 42
and cd_marital_status = 'W'
and cd_education_status = 'Advanced Degree'
and s1.ss_list_price between 177 and 191
and s2.ss_list_price between 177 and 191
;",173,/*+  SeqScan(s2) SeqScan(item2) SeqScan(s1) SeqScan(customer) SeqScan(customer_demographics) SeqScan(item1) IndexScan(date_dim date_dim_pkey) IndexOnlyScan(customer_address customer_address_pkey) HashJoin(s2 item2) HashJoin(customer customer_demographics) HashJoin(s1 customer customer_demographics) HashJoin(s1 customer customer_demographics item1) NestLoop(s1 customer customer_demographics item1 date_dim) NestLoop(s1 customer customer_demographics item1 date_dim customer_address) HashJoin(s2 item2 s1 customer customer_demographics item1 date_dim customer_address) Leading(((s2 item2) ((((s1 (customer customer_demographics)) item1) date_dim) customer_address))) */
