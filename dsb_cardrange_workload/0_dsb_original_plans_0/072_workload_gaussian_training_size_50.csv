query,plan_id,plan_content
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Jewelry', 'Sports')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Sports', 'Women')
  AND cs_wholesale_cost BETWEEN 11 AND 31  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 51 AND 71  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Home', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 11 AND 31  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Men', 'Sports')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Books', 'Children', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 19 AND 39  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 77 AND 97  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Books', 'Children', 'Women')
  AND cs_wholesale_cost BETWEEN 68 AND 88  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 33 AND 53  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 4 AND 24  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 29 AND 49  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Home', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 49 AND 69  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Books', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 38 AND 58  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Home', 'Jewelry', 'Sports')
  AND cs_wholesale_cost BETWEEN 51 AND 71  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 19 AND 39  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 55 AND 75  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 100 AND 120  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 76 AND 96  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 55 AND 75  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Books', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Music', 'Women')
  AND cs_wholesale_cost BETWEEN 16 AND 36  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Men', 'Sports')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 20 AND 40  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Books', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 69 AND 89  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Men', 'Music')
  AND cs_wholesale_cost BETWEEN 8 AND 28  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 35 AND 55  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 32 AND 52  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 16 AND 36  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 55 AND 75  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 13 AND 33  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Jewelry', 'Sports')
  AND cs_wholesale_cost BETWEEN 17 AND 37  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 24 AND 44  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Books', 'Children', 'Electronics')
  AND cs_wholesale_cost BETWEEN 0 AND 20  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Books', 'Children', 'Home')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 57 AND 77  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Home', 'Sports', 'Women')
  AND cs_wholesale_cost BETWEEN 76 AND 96  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Home', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 57 AND 77  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Jewelry', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Jewelry', 'Shoes')
  AND cs_wholesale_cost BETWEEN 3 AND 23  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Home', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 4 AND 24  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 4 AND 24  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Home', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 38 AND 58  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 31 AND 51  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Sports')
  AND cs_wholesale_cost BETWEEN 21 AND 41  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 79 AND 99  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 51 AND 71  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Home', 'Jewelry', 'Shoes')
  AND cs_wholesale_cost BETWEEN 19 AND 39  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Books', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 77 AND 97  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Children', 'Electronics')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 27 AND 47  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Books', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 53 AND 73  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 44 AND 64  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 2 AND 22  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 39 AND 59  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 11 AND 31  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 26 AND 46  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 74 AND 94  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 28 AND 48  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Music')
  AND cs_wholesale_cost BETWEEN 6 AND 26  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 39 AND 59  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'U'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 41 AND 61  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Books', 'Music', 'Women')
  AND cs_wholesale_cost BETWEEN 78 AND 98  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 7 AND 27  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Books', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 50 AND 70  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Music')
  AND cs_wholesale_cost BETWEEN 61 AND 81  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 23 AND 43  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Home', 'Music')
  AND cs_wholesale_cost BETWEEN 52 AND 72  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 10 AND 30  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Books', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 72 AND 92  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 78 AND 98  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 22 AND 42  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Books', 'Children', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 9 AND 29  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'U'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 42 AND 62  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 16 AND 36  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 26 AND 46  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Jewelry', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 31 AND 51  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 35 AND 55  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 8 AND 28  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 63 AND 83  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 9 AND 29  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'U'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Books', 'Children', 'Electronics')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Books', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 12 AND 32  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Home', 'Jewelry', 'Music')
  AND cs_wholesale_cost BETWEEN 55 AND 75  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 77 AND 97  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 48 AND 68  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Children', 'Women')
  AND cs_wholesale_cost BETWEEN 47 AND 67  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 10 AND 30  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 24 AND 44  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 78 AND 98  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 62 AND 82  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 62 AND 82  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 46 AND 66  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Home', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 2 AND 22  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 28 AND 48  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 60 AND 80  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 7 AND 27  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 34 AND 54  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 50 AND 70  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Books', 'Children', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 48 AND 68  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 64 AND 84  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Home', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 46 AND 66  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 66 AND 86  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 60 AND 80  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 11 AND 31  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 13 AND 33  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Jewelry', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 69 AND 89  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 71 AND 91  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 45 AND 65  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'U'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 39 AND 59  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 18 AND 38  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 36 AND 56  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Electronics', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 23 AND 43  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 31 AND 51  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 0 AND 20  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 13 AND 33  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 55 AND 75  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Children', 'Electronics')
  AND cs_wholesale_cost BETWEEN 16 AND 36  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 33 AND 53  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Sports')
  AND cs_wholesale_cost BETWEEN 24 AND 44  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 18 AND 38  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 28 AND 48  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Men', 'Shoes')
  AND cs_wholesale_cost BETWEEN 15 AND 35  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 26 AND 46  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 27 AND 47  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Home', 'Sports')
  AND cs_wholesale_cost BETWEEN 20 AND 40  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 37 AND 57  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 43 AND 63  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 59 AND 79  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Books', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 10 AND 30  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Home', 'Jewelry', 'Shoes')
  AND cs_wholesale_cost BETWEEN 41 AND 61  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 66 AND 86  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Home', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 15 AND 35  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 6 AND 26  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 56 AND 76  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 59 AND 79  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 68 AND 88  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Electronics', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 38 AND 58  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 38 AND 58  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 53 AND 73  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 38 AND 58  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 10 AND 30  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 19 AND 39  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Children', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 22 AND 42  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Electronics', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 63 AND 83  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 40 AND 60  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Books', 'Children', 'Men')
  AND cs_wholesale_cost BETWEEN 25 AND 45  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'M'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 22 AND 42  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Home', 'Women')
  AND cs_wholesale_cost BETWEEN 77 AND 97  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 60 AND 80  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Books', 'Jewelry', 'Men')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Books', 'Children', 'Men')
  AND cs_wholesale_cost BETWEEN 53 AND 73  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Home', 'Sports')
  AND cs_wholesale_cost BETWEEN 63 AND 83  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2002
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 12 AND 32  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Men', 'Sports')
  AND cs_wholesale_cost BETWEEN 64 AND 84  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Books', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Men', 'Women')
  AND cs_wholesale_cost BETWEEN 11 AND 31  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 53 AND 73  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 7 AND 27  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 5 AND 7
  AND i_category IN ('Books', 'Electronics', 'Women')
  AND cs_wholesale_cost BETWEEN 59 AND 79  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 2 AND 4
  AND i_category IN ('Children', 'Electronics', 'Home')
  AND cs_wholesale_cost BETWEEN 61 AND 81  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Jewelry', 'Sports')
  AND cs_wholesale_cost BETWEEN 65 AND 85  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2000
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 0 AND 2
  AND i_category IN ('Electronics', 'Home', 'Men')
  AND cs_wholesale_cost BETWEEN 1 AND 21  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1999
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 4 AND 24  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'S'
  AND cd_dep_count BETWEEN 6 AND 8
  AND i_category IN ('Electronics', 'Jewelry', 'Women')
  AND cs_wholesale_cost BETWEEN 26 AND 46  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '>10000'
  AND d1.d_year = 2001
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 3 AND 5
  AND i_category IN ('Children', 'Electronics', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 80 AND 100  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '501-1000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'W'
  AND cd_dep_count BETWEEN 1 AND 3
  AND i_category IN ('Books', 'Children', 'Electronics')
  AND cs_wholesale_cost BETWEEN 32 AND 52  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
"SELECT min(i_item_sk) ,
       min(w_warehouse_name) ,
       min(d1.d_week_seq) ,
       min(cs_item_sk) ,
       min(cs_order_number) ,
       min(inv_item_sk)
FROM catalog_sales
JOIN inventory ON (cs_item_sk = inv_item_sk)
JOIN warehouse ON (w_warehouse_sk=inv_warehouse_sk)
JOIN item ON (i_item_sk = cs_item_sk)
JOIN customer_demographics ON (cs_bill_cdemo_sk = cd_demo_sk)
JOIN household_demographics ON (cs_bill_hdemo_sk = hd_demo_sk)
JOIN date_dim d1 ON (cs_sold_date_sk = d1.d_date_sk)
JOIN date_dim d2 ON (inv_date_sk = d2.d_date_sk)
JOIN date_dim d3 ON (cs_ship_date_sk = d3.d_date_sk)
LEFT OUTER JOIN promotion ON (cs_promo_sk=p_promo_sk)
LEFT OUTER JOIN catalog_returns ON (cr_item_sk = cs_item_sk
                                    AND cr_order_number = cs_order_number)
WHERE d1.d_week_seq = d2.d_week_seq
  AND inv_quantity_on_hand < cs_quantity
  AND d3.d_date > d1.d_date + interval '3 day'
  AND hd_buy_potential = '1001-5000'
  AND d1.d_year = 1998
  AND cd_marital_status = 'D'
  AND cd_dep_count BETWEEN 4 AND 6
  AND i_category IN ('Children', 'Home', 'Jewelry')
  AND cs_wholesale_cost BETWEEN 72 AND 92  ;",1,/*+  SeqScan(catalog_sales) SeqScan(d1) IndexScan(customer_demographics customer_demographics_pkey) SeqScan(d2) SeqScan(household_demographics) IndexScan(item item_pkey) IndexScan(inventory inventory_pkey) SeqScan(warehouse) SeqScan(d3) HashJoin(catalog_sales d1) NestLoop(catalog_sales d1 customer_demographics) HashJoin(catalog_sales d1 customer_demographics d2) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics) NestLoop(item inventory) NestLoop(catalog_sales d1 customer_demographics d2 household_demographics item inventory) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse) HashJoin(catalog_sales d1 customer_demographics d2 household_demographics item inventory warehouse d3) Leading((((((((catalog_sales d1) customer_demographics) d2) household_demographics) (item inventory)) warehouse) d3)) */
