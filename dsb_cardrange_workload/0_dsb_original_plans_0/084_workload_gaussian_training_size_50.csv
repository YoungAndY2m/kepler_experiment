query,plan_id,plan_content
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lebanon'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Glenwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wildwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Harmony'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Five Points'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oak Ridge'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hopewell'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Franklin'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Highland Park'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wilson'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Sunnyside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Spring Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Farmington'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Edgewood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Edgewood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Clinton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wildwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Plainview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Newtown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Salem'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Centerville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hillcrest'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodlawn'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Waterloo'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Kingston'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'New Hope'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Clifton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Franklin'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lincoln'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Pleasant Valley'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oak Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Farmington'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Marion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lebanon'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Deerfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Maple Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Walnut Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Forest Hills'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Newtown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Buena Vista'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Maple Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Crossroads'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Zion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Zion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Union'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Shiloh'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Stringtown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Sunnyside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Unionville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Shady Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Plainview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Jamestown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lakeview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Pine Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Pleasant Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Highland Park'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Salem'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Springdale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Buena Vista'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Antioch'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'New Hope'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Walnut Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Friendship'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Red Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Antioch'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Newtown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hopewell'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Highland Park'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lincoln'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Glendale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Bethel'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Five Forks'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Newtown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Concord'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Enterprise'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hillcrest'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Georgetown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Macedonia'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Buena Vista'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Marion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Five Forks'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Bethel'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Antioch'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Marion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Spring Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Glenwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Kingston'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Centerville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Pleasant Valley'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hamilton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Five Forks'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oak Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Georgetown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hamilton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Fairfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hamilton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverdale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Plainview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Green Acres'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Valley View'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hopewell'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Walnut Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Franklin'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Shiloh'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Five Forks'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mountain View'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Providence'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Farmington'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Walnut Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Crossroads'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Brownsville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Jamestown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Harmony'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Spring Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Spring Valley'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Concord'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Forest Hills'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Georgetown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Marion'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Fairview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Red Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Enterprise'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Springfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lakeside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodlawn'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Salem'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Kingston'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Glendale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Green Acres'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wilson'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Ashland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Vernon'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Harmony'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Highland Park'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Georgetown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Green Acres'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Bethel'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Springfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wildwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Bethel'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Jackson'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Jamestown'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodlawn'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Shiloh'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Fairfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Sulphur Springs'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wilson'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Highland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Crossroads'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Antioch'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'New Hope'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Springdale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Antioch'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Red Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Riverside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lakeview'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 10000
  AND ib_upper_bound <= 10000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Hamilton'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Sunnyside'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mountain View'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'White Oak'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oak Ridge'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 60000
  AND ib_upper_bound <= 60000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Glendale'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Florence'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Concord'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'White Oak'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Vernon'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Mount Pleasant'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 50000
  AND ib_upper_bound <= 50000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Lincoln'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 30000
  AND ib_upper_bound <= 30000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Maple Grove'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Wildwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 70000
  AND ib_upper_bound <= 70000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Woodland'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Greenfield'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 20000
  AND ib_upper_bound <= 20000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oakwood'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Brownsville'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Oak Hill'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 40000
  AND ib_upper_bound <= 40000 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
"SELECT min(c_customer_id),
       min(sr_ticket_number),
       min(sr_item_sk)
FROM customer ,
     customer_address ,
     customer_demographics ,
     household_demographics ,
     income_band ,
     store_returns
WHERE ca_city = 'Summit'
  AND c_current_addr_sk = ca_address_sk
  AND ib_lower_bound >= 0
  AND ib_upper_bound <= 0 + 50000
  AND ib_income_band_sk = hd_income_band_sk
  AND cd_demo_sk = c_current_cdemo_sk
  AND hd_demo_sk = c_current_hdemo_sk
  AND sr_cdemo_sk = cd_demo_sk ;",6,/*+  SeqScan(store_returns) SeqScan(customer) SeqScan(customer_address) IndexOnlyScan(customer_demographics customer_demographics_pkey) IndexScan(household_demographics household_demographics_pkey) IndexScan(income_band income_band_pkey) HashJoin(customer customer_address) NestLoop(customer customer_address customer_demographics) NestLoop(customer customer_address customer_demographics household_demographics) HashJoin(store_returns customer customer_address customer_demographics household_demographics) NestLoop(store_returns customer customer_address customer_demographics household_demographics income_band) Leading(((store_returns (((customer customer_address) customer_demographics) household_demographics)) income_band)) */
